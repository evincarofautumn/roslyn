<?xml version="1.0"?>
<doc>
<assembly>
<name>
Microsoft.CodeAnalysis.VisualBasic.Scripting
</name>
</assembly>
<members>
<member name="T:Microsoft.CodeAnalysis.VisualBasic.Scripting.VisualBasicScript">
 <summary>
 A factory for creating and running Visual Basic scripts.
 </summary>
</member>
<member name="M:Microsoft.CodeAnalysis.VisualBasic.Scripting.VisualBasicScript.Create``1(System.String,Microsoft.CodeAnalysis.Scripting.ScriptOptions,System.Type,Microsoft.CodeAnalysis.Scripting.Hosting.InteractiveAssemblyLoader)">
 <summary>
 Create a new Visual Basic script.
 </summary>
</member>
<member name="M:Microsoft.CodeAnalysis.VisualBasic.Scripting.VisualBasicScript.Create(System.String,Microsoft.CodeAnalysis.Scripting.ScriptOptions,System.Type,Microsoft.CodeAnalysis.Scripting.Hosting.InteractiveAssemblyLoader)">
 <summary>
 Create a new Visual Basic script.
 </summary>
</member>
<member name="M:Microsoft.CodeAnalysis.VisualBasic.Scripting.VisualBasicScript.RunAsync``1(System.String,Microsoft.CodeAnalysis.Scripting.ScriptOptions,System.Object,System.Threading.CancellationToken)">
 <summary>
 Run a Visual Basic script.
 </summary>
</member>
<member name="M:Microsoft.CodeAnalysis.VisualBasic.Scripting.VisualBasicScript.RunAsync(System.String,Microsoft.CodeAnalysis.Scripting.ScriptOptions,System.Object,System.Threading.CancellationToken)">
 <summary>
 Run a Visual Basic script.
 </summary>
</member>
<member name="M:Microsoft.CodeAnalysis.VisualBasic.Scripting.VisualBasicScript.EvaluateAsync``1(System.String,Microsoft.CodeAnalysis.Scripting.ScriptOptions,System.Object,System.Threading.CancellationToken)">
 <summary>
 Run a Visual Basic script and return its resulting value.
 </summary>
</member>
<member name="M:Microsoft.CodeAnalysis.VisualBasic.Scripting.VisualBasicScript.EvaluateAsync(System.String,Microsoft.CodeAnalysis.Scripting.ScriptOptions,System.Object,System.Threading.CancellationToken)">
 <summary>
 Run a Visual Basic script and return its resulting value.
 </summary>
</member>
<member name="T:VBScriptingResources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:VBScriptingResources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:VBScriptingResources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:VBScriptingResources.ExceptionEscapeWithoutQuote">
<summary>
  Looks up a localized string similar to Cannot escape non-printable characters in Visual Basic notation unless quotes are used..
</summary>
</member>
<member name="P:VBScriptingResources.InteractiveHelp">
<summary>
  Looks up a localized string similar to Usage: vbi [options] [script-file.vbx] [-- script-arguments]

If script-file is specified executes the script, otherwise launches an interactive REPL (Read Eval Print Loop).

Options:
  /help                          Display this usage message (Short form: /?)
  /reference:&lt;alias&gt;=&lt;file&gt;      Reference metadata from the specified assembly file using the given alias (Short form: /r)
  /reference:&lt;file list&gt;         Reference metadata from the specified assembly files (Short form: /r)
  /referencePath [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:VBScriptingResources.LogoLine1">
<summary>
  Looks up a localized string similar to Microsoft (R) Visual Basic Interactive Compiler version {0}.
</summary>
</member>
<member name="P:VBScriptingResources.LogoLine2">
<summary>
  Looks up a localized string similar to Copyright (C) Microsoft Corporation. All rights reserved..
</summary>
</member>
</members>
</doc>
